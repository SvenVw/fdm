ARG NODE_VERSION=22
ARG PROJECT=@svenvw/fdm-app

# Alpine image
FROM node:${NODE_VERSION}-alpine AS base
RUN apk update && \
    apk add --no-cache libc6-compat && \
    npm install -g pnpm turbo && \
    pnpm config set store-dir ~/.pnpm-store

# Builder stage
FROM base AS builder
WORKDIR /app
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY fdm-app/package.json fdm-app/
COPY fdm-core/package.json fdm-core/
COPY fdm-data/package.json fdm-data/
COPY fdm-calculator/package.json fdm-calculator/

RUN pnpm install --frozen-lockfile
COPY . ./
RUN pnpm build
RUN pnpm prune --prod

# Production runner stage
FROM node:${NODE_VERSION}-alpine AS runner
WORKDIR /app

# Add non-root user for security
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy only necessary files from builder
COPY --from=builder --chown=nextjs:nodejs /app/fdm-app/package.json ./
COPY --from=builder --chown=nextjs:nodejs /app/fdm-app/node_modules ./node_modules
COPY --from=builder --chown=nextjs:nodejs /app/fdm-app/build ./build

# Set production environment
ENV NODE_ENV=production
ENV PORT=8080

# Use non-root user
USER nextjs

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s \
  CMD wget -q --spider http://localhost:8080/health || exit 1

CMD ["pnpm", "start"]
