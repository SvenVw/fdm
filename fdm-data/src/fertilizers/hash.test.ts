import { describe, expect, it } from "vitest"
import type { CatalogueFertilizerItem } from "./d"
import { hashFertilizer } from "./hash"

describe("hashFertilizer", () => {
    it("should generate a hash for a fertilizer item", async () => {
        const fertilizer: CatalogueFertilizerItem = {
            p_id_catalogue: "test-id",
            p_source: "test-source",
            p_name_nl: "Test Fertilizer",
            p_name_en: "Test Fertilizer (EN)",
            p_description: "This is a test fertilizer",
            p_ef_nh3: 0.05,
            p_dm: 37,
            p_density: 20,
            p_om: 20,
            p_a: 30,
            p_hc: 40,
            p_eom: 50,
            p_eoc: 60,
            p_c_rt: 70,
            p_c_of: 80,
            p_c_if: 90,
            p_c_fr: 100,
            p_cn_of: 110,
            p_n_rt: 120,
            p_n_if: 130,
            p_n_of: 140,
            p_n_wc: 150,
            p_no3_rt: 150,
            p_nh4_rt: 150,
            p_p_rt: 160,
            p_k_rt: 170,
            p_mg_rt: 180,
            p_ca_rt: 190,
            p_ne: 200,
            p_s_rt: 210,
            p_s_wc: 220,
            p_cu_rt: 230,
            p_zn_rt: 240,
            p_na_rt: 250,
            p_si_rt: 260,
            p_b_rt: 270,
            p_mn_rt: 280,
            p_ni_rt: 290,
            p_fe_rt: 300,
            p_mo_rt: 310,
            p_co_rt: 320,
            p_as_rt: 330,
            p_cd_rt: 340,
            p_cr_rt: 350,
            p_cr_vi: 360,
            p_pb_rt: 370,
            p_hg_rt: 380,
            p_cl_rt: 390,
            p_type_manure: true,
            p_type_mineral: false,
            p_type_compost: false,
        }

        const hash = await hashFertilizer(fertilizer)
        expect(hash).toBeDefined()
        expect(typeof hash).toBe("string")
        expect(hash.length).toBeGreaterThan(0)
        expect(hash).toBe("5a405bbe")
    })

    it("should generate different hashes for different fertilizer items", async () => {
        const fertilizer1: CatalogueFertilizerItem = {
            p_id_catalogue: "test-id-1",
            p_source: "test-source",
            p_name_nl: "Test Fertilizer 1",
            p_name_en: "Test Fertilizer (EN)",
            p_description: "This is a test fertilizer",
            p_dm: 37,
            p_density: 20,
            p_om: 20,
            p_a: 30,
            p_hc: 40,
            p_eom: 50,
            p_eoc: 60,
            p_c_rt: 70,
            p_c_of: 80,
            p_c_if: 90,
            p_c_fr: 100,
            p_cn_of: 110,
            p_n_rt: 120,
            p_n_if: 130,
            p_n_of: 140,
            p_n_wc: 150,
            p_no3_rt: 150,
            p_nh4_rt: 150,
            p_p_rt: 160,
            p_k_rt: 170,
            p_mg_rt: 180,
            p_ca_rt: 190,
            p_ne: 200,
            p_s_rt: 210,
            p_s_wc: 220,
            p_cu_rt: 230,
            p_zn_rt: 240,
            p_na_rt: 250,
            p_si_rt: 260,
            p_b_rt: 270,
            p_mn_rt: 280,
            p_ni_rt: 290,
            p_fe_rt: 300,
            p_mo_rt: 310,
            p_co_rt: 320,
            p_as_rt: 330,
            p_cd_rt: 340,
            p_cr_rt: 350,
            p_cr_vi: 360,
            p_pb_rt: 370,
            p_hg_rt: 380,
            p_cl_rt: 390,
            p_type_manure: true,
            p_type_mineral: false,
            p_type_compost: false,
        }

        const fertilizer2: CatalogueFertilizerItem = {
            p_id_catalogue: "test-id-2",
            p_source: "test-source",
            p_name_nl: "Test Fertilizer 2", // Different name
            p_name_en: "Test Fertilizer (EN)",
            p_description: "This is a test fertilizer",
            p_dm: 37,
            p_density: 20,
            p_om: 20,
            p_a: 30,
            p_hc: 40,
            p_eom: 50,
            p_eoc: 60,
            p_c_rt: 70,
            p_c_of: 80,
            p_c_if: 90,
            p_c_fr: 100,
            p_cn_of: 110,
            p_n_rt: 120,
            p_n_if: 130,
            p_n_of: 140,
            p_n_wc: 150,
            p_no3_rt: 150,
            p_nh4_rt: 150,
            p_p_rt: 160,
            p_k_rt: 170,
            p_mg_rt: 180,
            p_ca_rt: 190,
            p_ne: 200,
            p_s_rt: 210,
            p_s_wc: 220,
            p_cu_rt: 230,
            p_zn_rt: 240,
            p_na_rt: 250,
            p_si_rt: 260,
            p_b_rt: 270,
            p_mn_rt: 280,
            p_ni_rt: 290,
            p_fe_rt: 300,
            p_mo_rt: 310,
            p_co_rt: 320,
            p_as_rt: 330,
            p_cd_rt: 340,
            p_cr_rt: 350,
            p_cr_vi: 360,
            p_pb_rt: 370,
            p_hg_rt: 380,
            p_cl_rt: 390,
            p_type_manure: true,
            p_type_mineral: false,
            p_type_compost: false,
        }

        const hash1 = await hashFertilizer(fertilizer1)
        const hash2 = await hashFertilizer(fertilizer2)

        expect(hash1).not.toBe(hash2)
    })

    it("should generate the same hash for identical fertilizer items", async () => {
        const fertilizer1: CatalogueFertilizerItem = {
            p_id_catalogue: "test-id-1",
            p_source: "test-source",
            p_name_nl: "Test Fertilizer 1",
            p_name_en: "Test Fertilizer (EN)",
            p_description: "This is a test fertilizer",
            p_dm: 37,
            p_density: 20,
            p_om: 20,
            p_a: 30,
            p_hc: 40,
            p_eom: 50,
            p_eoc: 60,
            p_c_rt: 70,
            p_c_of: 80,
            p_c_if: 90,
            p_c_fr: 100,
            p_cn_of: 110,
            p_n_rt: 120,
            p_n_if: 130,
            p_n_of: 140,
            p_n_wc: 150,
            p_no3_rt: 150,
            p_nh4_rt: 150,
            p_p_rt: 160,
            p_k_rt: 170,
            p_mg_rt: 180,
            p_ca_rt: 190,
            p_ne: 200,
            p_s_rt: 210,
            p_s_wc: 220,
            p_cu_rt: 230,
            p_zn_rt: 240,
            p_na_rt: 250,
            p_si_rt: 260,
            p_b_rt: 270,
            p_mn_rt: 280,
            p_ni_rt: 290,
            p_fe_rt: 300,
            p_mo_rt: 310,
            p_co_rt: 320,
            p_as_rt: 330,
            p_cd_rt: 340,
            p_cr_rt: 350,
            p_cr_vi: 360,
            p_pb_rt: 370,
            p_hg_rt: 380,
            p_cl_rt: 390,
            p_type_manure: true,
            p_type_mineral: false,
            p_type_compost: false,
        }

        const fertilizer2: CatalogueFertilizerItem = {
            ...fertilizer1,
        }

        const hash1 = await hashFertilizer(fertilizer1)
        const hash2 = await hashFertilizer(fertilizer2)

        expect(hash1).toBe(hash2)
    })

    it("should generate different hashes when a boolean value changes", async () => {
        const fertilizer1: CatalogueFertilizerItem = {
            p_id_catalogue: "test-id-1",
            p_source: "test-source",
            p_name_nl: "Test Fertilizer 1",
            p_name_en: "Test Fertilizer (EN)",
            p_description: "This is a test fertilizer",
            p_dm: 37,
            p_density: 20,
            p_om: 20,
            p_a: 30,
            p_hc: 40,
            p_eom: 50,
            p_eoc: 60,
            p_c_rt: 70,
            p_c_of: 80,
            p_c_if: 90,
            p_c_fr: 100,
            p_cn_of: 110,
            p_n_rt: 120,
            p_n_if: 130,
            p_n_of: 140,
            p_n_wc: 150,
            p_no3_rt: 150,
            p_nh4_rt: 150,
            p_p_rt: 160,
            p_k_rt: 170,
            p_mg_rt: 180,
            p_ca_rt: 190,
            p_ne: 200,
            p_s_rt: 210,
            p_s_wc: 220,
            p_cu_rt: 230,
            p_zn_rt: 240,
            p_na_rt: 250,
            p_si_rt: 260,
            p_b_rt: 270,
            p_mn_rt: 280,
            p_ni_rt: 290,
            p_fe_rt: 300,
            p_mo_rt: 310,
            p_co_rt: 320,
            p_as_rt: 330,
            p_cd_rt: 340,
            p_cr_rt: 350,
            p_cr_vi: 360,
            p_pb_rt: 370,
            p_hg_rt: 380,
            p_cl_rt: 390,
            p_type_manure: true,
            p_type_mineral: false,
            p_type_compost: false,
        }

        const fertilizer2: CatalogueFertilizerItem = {
            ...fertilizer1,
            p_type_manure: false,
        }

        const hash1 = await hashFertilizer(fertilizer1)
        const hash2 = await hashFertilizer(fertilizer2)

        expect(hash1).not.toBe(hash2)
    })
    it("should generate different hashes when a numerical value changes", async () => {
        const fertilizer1: CatalogueFertilizerItem = {
            p_id_catalogue: "test-id-1",
            p_source: "test-source",
            p_name_nl: "Test Fertilizer 1",
            p_name_en: "Test Fertilizer (EN)",
            p_description: "This is a test fertilizer",
            p_dm: 37,
            p_density: 20,
            p_om: 20,
            p_a: 30,
            p_hc: 40,
            p_eom: 50,
            p_eoc: 60,
            p_c_rt: 70,
            p_c_of: 80,
            p_c_if: 90,
            p_c_fr: 100,
            p_cn_of: 110,
            p_n_rt: 120,
            p_n_if: 130,
            p_n_of: 140,
            p_n_wc: 150,
            p_no3_rt: 150,
            p_nh4_rt: 150,
            p_p_rt: 160,
            p_k_rt: 170,
            p_mg_rt: 180,
            p_ca_rt: 190,
            p_ne: 200,
            p_s_rt: 210,
            p_s_wc: 220,
            p_cu_rt: 230,
            p_zn_rt: 240,
            p_na_rt: 250,
            p_si_rt: 260,
            p_b_rt: 270,
            p_mn_rt: 280,
            p_ni_rt: 290,
            p_fe_rt: 300,
            p_mo_rt: 310,
            p_co_rt: 320,
            p_as_rt: 330,
            p_cd_rt: 340,
            p_cr_rt: 350,
            p_cr_vi: 360,
            p_pb_rt: 370,
            p_hg_rt: 380,
            p_cl_rt: 390,
            p_type_manure: true,
            p_type_mineral: false,
            p_type_compost: false,
        }

        const fertilizer2: CatalogueFertilizerItem = {
            ...fertilizer1,
            p_dm: 50,
        }

        const hash1 = await hashFertilizer(fertilizer1)
        const hash2 = await hashFertilizer(fertilizer2)

        expect(hash1).not.toBe(hash2)
    })
    it("should generate different hashes when a string value changes", async () => {
        const fertilizer1: CatalogueFertilizerItem = {
            p_id_catalogue: "test-id-1",
            p_source: "test-source",
            p_name_nl: "Test Fertilizer 1",
            p_name_en: "Test Fertilizer (EN)",
            p_description: "This is a test fertilizer",
            p_dm: 37,
            p_density: 20,
            p_om: 20,
            p_a: 30,
            p_hc: 40,
            p_eom: 50,
            p_eoc: 60,
            p_c_rt: 70,
            p_c_of: 80,
            p_c_if: 90,
            p_c_fr: 100,
            p_cn_of: 110,
            p_n_rt: 120,
            p_n_if: 130,
            p_n_of: 140,
            p_n_wc: 150,
            p_no3_rt: 150,
            p_nh4_rt: 150,
            p_p_rt: 160,
            p_k_rt: 170,
            p_mg_rt: 180,
            p_ca_rt: 190,
            p_ne: 200,
            p_s_rt: 210,
            p_s_wc: 220,
            p_cu_rt: 230,
            p_zn_rt: 240,
            p_na_rt: 250,
            p_si_rt: 260,
            p_b_rt: 270,
            p_mn_rt: 280,
            p_ni_rt: 290,
            p_fe_rt: 300,
            p_mo_rt: 310,
            p_co_rt: 320,
            p_as_rt: 330,
            p_cd_rt: 340,
            p_cr_rt: 350,
            p_cr_vi: 360,
            p_pb_rt: 370,
            p_hg_rt: 380,
            p_cl_rt: 390,
            p_type_manure: true,
            p_type_mineral: false,
            p_type_compost: false,
        }

        const fertilizer2: CatalogueFertilizerItem = {
            ...fertilizer1,
            p_name_nl: "Updated Test Fertilizer Name",
        }

        const hash1 = await hashFertilizer(fertilizer1)
        const hash2 = await hashFertilizer(fertilizer2)

        expect(hash1).not.toBe(hash2)
    })
})
